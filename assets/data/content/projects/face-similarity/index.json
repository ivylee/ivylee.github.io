{"hash":"8a38f65bec34a8b9696033cf96676de3140429bb","data":{"post":{"title":"Face Similarity","date":"2014","technologies":["OpenCV","Java","Scala","Javascript","HTML","NodeJS","R"],"summary":"I developed an algorithm to detect and compute face similarity score for a given set of profile images.","content":"<p>Given a set of social media profile images, how can we tell if they belong to the same person?</p>\n<p>I developed an algorithm to detect and compute face similarity score for a given set of profile images, which was implemented as a component in a Scala REST API backend.</p>\n<p>Why was this challenging?</p>\n<ol>\n<li>This was done before the boom of Deep Learning.</li>\n<li>Profile images from social media were smaller than 150px by 150px, many Deep Learning based algorithm today would not even work.</li>\n<li>Face detection and similarity scoring had to be done in real-time, latency requirement as such placed contraints on the selection of algorithms that could be used.</li>\n<li>While developing the algorithm, I discovered a nontrivial bug in OpenCV, for the benefit of the open source community, I submitted a patch upstream.</li>\n<li>After the algorithm was developed and tested for accuracy, bridging OpenCV and Scala via JNI required careful engineering.</li>\n</ol>\n"}},"context":{}}